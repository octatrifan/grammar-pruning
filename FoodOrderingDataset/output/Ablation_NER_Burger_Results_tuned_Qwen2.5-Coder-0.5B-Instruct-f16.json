[
    {
        "input": "i would like a vegan burger with lettuce tomatoes and onions and a large order of sweet potato fries",
        "input_augmented": "i would like a vegan burger with lettuce tomatoes and onions and a large order of sweet potato fries\nItems Found: a - number(1), vegan burger - main_dish_type(vegan_burger), lettuce - topping(lettuce), tomatoes - topping(tomato), onions - topping(onion), a - number(1), large - side_size(large), sweet potato fries - side_type(sweet_potato_fries)",
        "output": "A BurgerOrder(Number=1, MainDishType='vegan_burger', ToppingDictionary=[])",
        "expected": "[BurgerOrder(number=1, main_dish_type='vegan_burger', toppings=[Topping(name='lettuce'), Topping(name='tomato'), Topping(name='onion')]), SideOrder(number=1, side_type='sweet_potato_fries', size='large')]",
        "output_NER": "a - number(1), vegan burger - main_dish_type(vegan_burger), lettuce - topping(lettuce), tomatoes - topping(tomato), onions - topping(onion), a - number(1), large - side_size(large), sweet potato fries - side_type(sweet_potato_fries)"
    },
    {
        "input": "i would also like an iced tea",
        "input_augmented": "i would also like an iced tea\nItems Found: an - number(1), iced tea - drink_type(iced_tea)",
        "output": "A BurgerOrder",
        "expected": "[DrinkOrder(number=1, drink_type='iced_tea')]",
        "output_NER": "an - number(1), iced tea - drink_type(iced_tea)"
    },
    {
        "input": "i'll have a cheeseburger with lettuce large french fries and a large diet coke",
        "input_augmented": "i'll have a cheeseburger with lettuce large french fries and a large diet coke\nItems Found: a - number(1), cheeseburger - main_dish_type(cheese_burger), lettuce - topping(lettuce), large - side_size(large), french fries - side_type(french_fries), a - number(1), large - drink_size(large), diet coke - drink_type(diet_coke)",
        "output": "BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='lettuce', qualifier='large', negation=False), Topping(name='tomatoes', qualifier='large', negation=False), Topping(name='lettuce', qualifier='large', negation=False), Topping(name='tomatoes', qualifier='large', negation=False), Topping(name='lettuce', qualifier='large', negation=False), Topping(name='tomatoes', qualifier='large', negation=False), Topping(name='tomatoes', qualifier='large', negation=False), Topping(name='tomatoes', qualifier='large', negation=False), Topping(name='tomatoes', qualifier='large', neg",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='lettuce')]), SideOrder(number=1, side_type='french_fries', size='large'), DrinkOrder(number=1, drink_type='diet_coke', size='large')]",
        "output_NER": "a - number(1), cheeseburger - main_dish_type(cheese_burger), lettuce - topping(lettuce), large - side_size(large), french fries - side_type(french_fries), a - number(1), large - drink_size(large), diet coke - drink_type(diet_coke)"
    },
    {
        "input": "i'd like a double cheeseburger with onions pickles bacon ketchup and mustard",
        "input_augmented": "i'd like a double cheeseburger with onions pickles bacon ketchup and mustard\nItems Found: a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), onions - topping(onion), pickles - topping(pickle), bacon - topping(bacon), ketchup - topping(ketchup), mustard - topping(mustard)",
        "output": "A BURGERORDER WITH A DOUBLE CHEEBERBURGER WITH ONGOEDIES AND A SMALL SIDE OF BACON",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='onion'), Topping(name='pickle'), Topping(name='bacon'), Topping(name='ketchup'), Topping(name='mustard')])]",
        "output_NER": "a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), onions - topping(onion), pickles - topping(pickle), bacon - topping(bacon), ketchup - topping(ketchup), mustard - topping(mustard)"
    },
    {
        "input": "for my drink i'd like an extra large sugar free lemonade and i'll take a large curly fries on the side",
        "input_augmented": "for my drink i'd like an extra large sugar free lemonade and i'll take a large curly fries on the side\nItems Found: an - number(1), extra large - drink_size(extra_large), sugar free lemonade - drink_type(zero_sugar_lemonade), a - number(1), large - side_size(large), curly fries - side_type(curly_fries)",
        "output": "A BURGERORDERTHING",
        "expected": "[DrinkOrder(number=1, drink_type='zero_sugar_lemonade', size='extra_large'), SideOrder(number=1, side_type='curly_fries', size='large')]",
        "output_NER": "an - number(1), extra large - drink_size(extra_large), sugar free lemonade - drink_type(zero_sugar_lemonade), a - number(1), large - side_size(large), curly fries - side_type(curly_fries)"
    },
    {
        "input": "hi can i have the double cheeseburger with ketchup and onions and french fries on the side",
        "input_augmented": "hi can i have the double cheeseburger with ketchup and onions and french fries on the side\nItems Found: double cheeseburger - main_dish_type(double_cheese_burger), ketchup - topping(ketchup), onions - topping(onion), french fries - side_type(french_fries)",
        "output": "burgerorder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='french_fries', qualifier='None', negation=True), Topping(name='french_fries', qualifier='None', negation=True), Topping(name='french_fries', qualifier='None', negation=True), Topping(name='french_fries', qualifier='None', negation=True), Topping(name='french_fries', qualifier='None', negation=True), Topping(name='french_fries', qualifier='None', negation=True), Topping(name='french_fries', qualifier='None', negation=True)]), sideorder(number=1, side_type='french",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='ketchup'), Topping(name='onion')]), SideOrder(number=1, side_type='french_fries')]",
        "output_NER": "double cheeseburger - main_dish_type(double_cheese_burger), ketchup - topping(ketchup), onions - topping(onion), french fries - side_type(french_fries)"
    },
    {
        "input": "can i also have a medium diet coke",
        "input_augmented": "can i also have a medium diet coke\nItems Found: a - number(1), medium - drink_size(medium), diet coke - drink_type(diet_coke)",
        "output": "A BurgerOrder(number=1, main_dish_type='diet_coke', toppings=[Topping(name='diet_coke', qualifier='None', qualifier='None', negation=False), Topping(name='diet_coke', qualifier='None', qualifier='None', negation=False), Topping(name='diet_coke', qualifier='None', qualifier='None', negation=False)]), SideOrder(number=1, side_type='diet_coke', size='None'), SideOrder(number=1, side_type='diet_coke', size='None')]",
        "expected": "[DrinkOrder(number=1, drink_type='diet_coke', size='medium')]",
        "output_NER": "a - number(1), medium - drink_size(medium), diet coke - drink_type(diet_coke)"
    },
    {
        "input": "can i have a chicken sandwich with lettuce and tomatoes a small curly fries and a small chocolate shake",
        "input_augmented": "can i have a chicken sandwich with lettuce and tomatoes a small curly fries and a small chocolate shake\nItems Found: a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), lettuce - topping(lettuce), tomatoes - topping(tomato), a - number(1), small - side_size(small), curly fries - side_type(curly_fries), a - number(1), small - drink_size(small), chocolate shake - drink_type(chocolate_shake)",
        "output": "BreadOrder(number=1, side_type='chocolate_butter', size='None', side_type='chocolate_made_chocolate', drink_type='chocolate_shake', drink_type='None', drink_type='None')",
        "expected": "[BurgerOrder(number=1, main_dish_type='chicken_sandwich', toppings=[Topping(name='lettuce'), Topping(name='tomato')]), SideOrder(number=1, side_type='curly_fries', size='small'), DrinkOrder(number=1, drink_type='chocolate_shake', size='small')]",
        "output_NER": "a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), lettuce - topping(lettuce), tomatoes - topping(tomato), a - number(1), small - side_size(small), curly fries - side_type(curly_fries), a - number(1), small - drink_size(small), chocolate shake - drink_type(chocolate_shake)"
    },
    {
        "input": "hi could i please have a cheeseburger with cheddar cheese onions pickles lettuce ketchup mustard and a little mayo",
        "input_augmented": "hi could i please have a cheeseburger with cheddar cheese onions pickles lettuce ketchup mustard and a little mayo\nItems Found: a - number(1), cheeseburger - main_dish_type(cheese_burger), cheddar cheese - topping(cheddar), onions - topping(onion), pickles - topping(pickle), lettuce - topping(lettuce), ketchup - topping(ketchup), mustard - topping(mustard), a little - quantity(light), mayo - topping(mayonnaise)",
        "output": "BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='cheese', qualifier='None', negation=False), Topping(name='red_onions', qualifier='None', negation=False), Topping(name='pickles', qualifier='None', negation=False), Topping(name='lettuce', qualifier='None', negation=False), Topping(name='guacamache', qualifier='None', negation=False), Topping(name='guacamache', qualifier='None', negation=False), Topping(name='guacamache', qualifier='None', negation=False), Topping(name='guacamache', qualifier='None', negation=False), Topping(name='guacamache",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='mayonnaise', qualifier='light'), Topping(name='cheddar'), Topping(name='onion'), Topping(name='pickle'), Topping(name='lettuce'), Topping(name='ketchup'), Topping(name='mustard')])]",
        "output_NER": "a - number(1), cheeseburger - main_dish_type(cheese_burger), cheddar cheese - topping(cheddar), onions - topping(onion), pickles - topping(pickle), lettuce - topping(lettuce), ketchup - topping(ketchup), mustard - topping(mustard), a little - quantity(light), mayo - topping(mayonnaise)"
    },
    {
        "input": "i would also like a small garlic fry and a medium diet coke",
        "input_augmented": "i would also like a small garlic fry and a medium diet coke\nItems Found: a - number(1), small - side_size(small), garlic fry - side_type(garlic_fries), a - number(1), medium - drink_size(medium), diet coke - drink_type(diet_coke)",
        "output": "A BurgerOrder(number=1, main_dish_type='dietet_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_b",
        "expected": "[SideOrder(number=1, side_type='garlic_fries', size='small'), DrinkOrder(number=1, drink_type='diet_coke', size='medium')]",
        "output_NER": "a - number(1), small - side_size(small), garlic fry - side_type(garlic_fries), a - number(1), medium - drink_size(medium), diet coke - drink_type(diet_coke)"
    },
    {
        "input": "today i'd like to try your double cheese burger plain with just ketchup and cheddar cheese on it",
        "input_augmented": "today i'd like to try your double cheese burger plain with just ketchup and cheddar cheese on it\nItems Found: today - date, double cheese burger - main_dish_type(double_cheese_burger), ketchup - topping(ketchup), cheddar cheese - topping(cheddar)",
        "output": "a burger order with double cheese and one regular low fat diet",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='ketchup'), Topping(name='cheddar')])]",
        "output_NER": "today - date, double cheese burger - main_dish_type(double_cheese_burger), ketchup - topping(ketchup), cheddar cheese - topping(cheddar)"
    },
    {
        "input": "to drink i'd like a root beer and for my side i want a large curly fries",
        "input_augmented": "to drink i'd like a root beer and for my side i want a large curly fries\nItems Found: a - number(1), root beer - drink_type(root_beer), a - number(1), large - side_size(large), curly fries - side_type(curly_fries)",
        "output": "A BurgerOrder",
        "expected": "[DrinkOrder(number=1, drink_type='root_beer'), SideOrder(number=1, side_type='curly_fries', size='large')]",
        "output_NER": "a - number(1), root beer - drink_type(root_beer), a - number(1), large - side_size(large), curly fries - side_type(curly_fries)"
    },
    {
        "input": "we also need a small fry a side of apple slices a medium diet coke and a small chocolate shake",
        "input_augmented": "we also need a small fry a side of apple slices a medium diet coke and a small chocolate shake\nItems Found: a - number(1), small - side_size(small), fry - side_type(french_fries), a - number(1), apple slices - side_type(apple_slices), a - number(1), medium - drink_size(medium), diet coke - drink_type(diet_coke), a - number(1), small - drink_size(small), chocolate shake - drink_type(chocolate_shake)",
        "output": "A BurgerOrder(number=1, main_dish_type='fry_birds', toppings=[Topping(name='fruit_toppings', qualifier='None', negation=True), Topping(name='sunchunchun', qualifier='None', negation=True), Topping(name='fruit_toppings', qualifier='None', negation=True), Topping(name='fruit_toppings', qualifier='None', negation=True), Topping(name='fruit_toppings', qualifier='None', negation=True), Topping(name='fruit_toppings', qualifier='None', negation=True), Topping(name='fruit_toppings', qualifier='None', negation=True), Topping(name='f",
        "expected": "[SideOrder(number=1, side_type='french_fries', size='small'), SideOrder(number=1, side_type='apple_slices'), DrinkOrder(number=1, drink_type='diet_coke', size='medium'), DrinkOrder(number=1, drink_type='chocolate_shake', size='small')]",
        "output_NER": "a - number(1), small - side_size(small), fry - side_type(french_fries), a - number(1), apple slices - side_type(apple_slices), a - number(1), medium - drink_size(medium), diet coke - drink_type(diet_coke), a - number(1), small - drink_size(small), chocolate shake - drink_type(chocolate_shake)"
    },
    {
        "input": "i would like two cheeseburgers with lettuce pickles and mustard",
        "input_augmented": "i would like two cheeseburgers with lettuce pickles and mustard\nItems Found: two - number(2), cheeseburgers - main_dish_type(cheese_burger), lettuce - topping(lettuce), pickles - topping(pickle), mustard - topping(mustard)",
        "output": "A BurgerOrder",
        "expected": "[BurgerOrder(number=2, main_dish_type='cheese_burger', toppings=[Topping(name='lettuce'), Topping(name='pickle'), Topping(name='mustard')])]",
        "output_NER": "two - number(2), cheeseburgers - main_dish_type(cheese_burger), lettuce - topping(lettuce), pickles - topping(pickle), mustard - topping(mustard)"
    },
    {
        "input": "i would also like a large sugar free lemonade a small root beer and and two orders of fries",
        "input_augmented": "i would also like a large sugar free lemonade a small root beer and and two orders of fries\nItems Found: a - number(1), large - drink_size(large), sugar free lemonade - drink_type(zero_sugar_lemonade), a - number(1), small - drink_size(small), root beer - drink_type(root_beer), two - number(2), fries - side_type(french_fries)",
        "output": "A BurgerOrder",
        "expected": "[DrinkOrder(number=1, drink_type='zero_sugar_lemonade', size='large'), DrinkOrder(number=1, drink_type='root_beer', size='small'), SideOrder(number=2, side_type='french_fries')]",
        "output_NER": "a - number(1), large - drink_size(large), sugar free lemonade - drink_type(zero_sugar_lemonade), a - number(1), small - drink_size(small), root beer - drink_type(root_beer), two - number(2), fries - side_type(french_fries)"
    },
    {
        "input": "hi i want a vegan burger with extra onions lettuce pickles and mustard",
        "input_augmented": "hi i want a vegan burger with extra onions lettuce pickles and mustard\nItems Found: a - number(1), vegan burger - main_dish_type(vegan_burger), extra - quantity(extra), onions - topping(onion), lettuce - topping(lettuce), pickles - topping(pickle), mustard - topping(mustard)",
        "output": "A BurgerOrder(Number=1, MainDishType='vegan_burger', Toppings=[]), SideOrder(Number=1, SideType='french_fries', Size='None'), SideOrder(Number=1, SideType='french_fries', Size='None'), SideOrder(Number=1, SideType='french_fries', Size='None'), SideOrder(Number=1, SideType='french_fries', Size='None'), SideOrder(Number=1, SideType='french_fries', Size='None'), SideOrder(Number=1, SideType='french_fries', Size='None'), SideOrder(Number=1, SideType='french_fries', Size='None'), SideOrder",
        "expected": "[BurgerOrder(number=1, main_dish_type='vegan_burger', toppings=[Topping(name='onion', qualifier='extra'), Topping(name='lettuce'), Topping(name='pickle'), Topping(name='mustard')])]",
        "output_NER": "a - number(1), vegan burger - main_dish_type(vegan_burger), extra - quantity(extra), onions - topping(onion), lettuce - topping(lettuce), pickles - topping(pickle), mustard - topping(mustard)"
    },
    {
        "input": "i'd also like a side of baby carrots and a sugar free lemonade please",
        "input_augmented": "i'd also like a side of baby carrots and a sugar free lemonade please\nItems Found: a - number(1), baby carrots - side_type(baby_carrots), a - number(1), sugar free lemonade - drink_type(zero_sugar_lemonade)",
        "output": "A SideOrder(Number=1, SideType='butterbread_butter', Size=1, DrinkType='sugar_free_lemonade', DrinkType='None')",
        "expected": "[SideOrder(number=1, side_type='baby_carrots'), DrinkOrder(number=1, drink_type='zero_sugar_lemonade')]",
        "output_NER": "a - number(1), baby carrots - side_type(baby_carrots), a - number(1), sugar free lemonade - drink_type(zero_sugar_lemonade)"
    },
    {
        "input": "can i get a double cheese burger with onions cheddar cheese lettuce pickles bacon tomatoes and mustard",
        "input_augmented": "can i get a double cheese burger with onions cheddar cheese lettuce pickles bacon tomatoes and mustard\nItems Found: a - number(1), double cheese burger - main_dish_type(double_cheese_burger), onions - topping(onion), cheddar cheese - topping(cheddar), lettuce - topping(lettuce), pickles - topping(pickle), bacon - topping(bacon), tomatoes - topping(tomato), mustard - topping(mustard)",
        "output": "A BurgerOrder(Number=1, MainDishType='double_cheese_burger', ToppingDictionary=[]) The Response:",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='onion'), Topping(name='cheddar'), Topping(name='lettuce'), Topping(name='pickle'), Topping(name='bacon'), Topping(name='tomato'), Topping(name='mustard')])]",
        "output_NER": "a - number(1), double cheese burger - main_dish_type(double_cheese_burger), onions - topping(onion), cheddar cheese - topping(cheddar), lettuce - topping(lettuce), pickles - topping(pickle), bacon - topping(bacon), tomatoes - topping(tomato), mustard - topping(mustard)"
    },
    {
        "input": "a large side of fries with a coke",
        "input_augmented": "a large side of fries with a coke\nItems Found: a - number(1), large - side_size(large), fries - side_type(french_fries), a - number(1), coke - drink_type(coca_cola)",
        "output": "A SideOrder(Number=1, SideType='french_fries', Size='large', DrinkOrder=[SideOrder(Number=1, SideType='french_fries', Size='None', DrinkOrder=[SideOrder(Number=1, SideType='coca_cola', Size='None', DrinkOrder=[SideOrder(Number=1, SideType='coca_cola', Size='None', DrinkOrder=[SideOrder(Number=1, SideType='coca_cola', Size='None', DrinkOrder=[SideOrder(Number=1, SideType='coca_cola', Size='None', DrinkOrder=[SideOrder(Number=1, SideType='coca_cola', Size='None', DrinkOrder=[SideOrder",
        "expected": "[SideOrder(number=1, side_type='french_fries', size='large'), DrinkOrder(number=1, drink_type='coca_cola')]",
        "output_NER": "a - number(1), large - side_size(large), fries - side_type(french_fries), a - number(1), coke - drink_type(coca_cola)"
    },
    {
        "input": "and two plain chicken sandwiches with iced tea and small curly fries on the side",
        "input_augmented": "and two plain chicken sandwiches with iced tea and small curly fries on the side\nItems Found: two - number(2), chicken sandwiches - main_dish_type(chicken_sandwich), iced tea - drink_type(iced_tea), small - side_size(small), curly fries - side_type(curly_fries)",
        "output": "a side order for one chicken sub",
        "expected": "[BurgerOrder(number=2, main_dish_type='chicken_sandwich'), DrinkOrder(number=1, drink_type='iced_tea'), SideOrder(number=1, side_type='curly_fries', size='small')]",
        "output_NER": "two - number(2), chicken sandwiches - main_dish_type(chicken_sandwich), iced tea - drink_type(iced_tea), small - side_size(small), curly fries - side_type(curly_fries)"
    },
    {
        "input": "hi i'd like a double cheeseburger with bacon and jalapenos a medium dr pepper and a small order of sweet potato fries",
        "input_augmented": "hi i'd like a double cheeseburger with bacon and jalapenos a medium dr pepper and a small order of sweet potato fries\nItems Found: a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), bacon - topping(bacon), jalapenos - topping(jalapenos), a - number(1), medium - drink_size(medium), dr pepper - drink_type(dr_pepper), a - number(1), small - side_size(small), sweet potato fries - side_type(sweet_potato_fries)",
        "output": "ABURGERORDERNUMBER(1, double_cheese_burger, main_dish_type=bacon, toppings=[Topping(name='jalapenos', qualifier='None', negation=False), Topping(name='jalapenos', qualifier='None', negation=False), Topping(name='jalapenos', qualifier='None', negation=False), Topping(name='jalapenos', qualifier='None', negation=False), Topping(name='jalapenos', qualifier='None', negation=False), Topping(name='jalapenos', qualifier='None', negation=False), Topping(name='jalapenos', qualifier='None', negation=False), Topping(name='jalapenos', qualifier='None', negation=False",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='bacon'), Topping(name='jalapenos')]), DrinkOrder(number=1, drink_type='dr_pepper', size='medium'), SideOrder(number=1, side_type='sweet_potato_fries', size='small')]",
        "output_NER": "a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), bacon - topping(bacon), jalapenos - topping(jalapenos), a - number(1), medium - drink_size(medium), dr pepper - drink_type(dr_pepper), a - number(1), small - side_size(small), sweet potato fries - side_type(sweet_potato_fries)"
    },
    {
        "input": "i want two chicken sandwich with bacon lettuce tomatoes onions jalapenos and mustard and mayo",
        "input_augmented": "i want two chicken sandwich with bacon lettuce tomatoes onions jalapenos and mustard and mayo\nItems Found: two - number(2), chicken sandwich - main_dish_type(chicken_sandwich), bacon - topping(bacon), lettuce - topping(lettuce), tomatoes - topping(tomato), onions - topping(onion), jalapenos - topping(jalapenos), mustard - topping(mustard), mayo - topping(mayonnaise)",
        "output": "A BurgerOrder(Number=2, MainDishType='chicken_sandwich', ToppingDictionary=[]) The Response:",
        "expected": "[BurgerOrder(number=2, main_dish_type='chicken_sandwich', toppings=[Topping(name='bacon'), Topping(name='lettuce'), Topping(name='tomato'), Topping(name='onion'), Topping(name='jalapenos'), Topping(name='mustard'), Topping(name='mayonnaise')])]",
        "output_NER": "two - number(2), chicken sandwich - main_dish_type(chicken_sandwich), bacon - topping(bacon), lettuce - topping(lettuce), tomatoes - topping(tomato), onions - topping(onion), jalapenos - topping(jalapenos), mustard - topping(mustard), mayo - topping(mayonnaise)"
    },
    {
        "input": "to drink i want a large pink lemonade as well as a side order of large garlic fries",
        "input_augmented": "to drink i want a large pink lemonade as well as a side order of large garlic fries\nItems Found: a - number(1), large - drink_size(large), pink lemonade - drink_type(pink_lemonade), a - number(1), large - side_size(large), garlic fries - side_type(garlic_fries)",
        "output": "A BurgerOrder(number=1, main_dish_type='sunchrim', toppings=[Topping(name='lemonade', qualifier='None', negation=False), Topping(name='garlic_fries', qualifier='None', negation=False), Topping(name='lemonade', qualifier='None', negation=False), Topping(name='garlic_fries', qualifier='None', negation=False), Topping(name='garlic_fries', qualifier='None', negation=False)]), SideOrder(number=1, side_type='french_fries', size='large'), SideOrder(number=1, side_type='garlic_fries', size='large'), SideOrder(number=1, side_type='garlic_f",
        "expected": "[DrinkOrder(number=1, drink_type='pink_lemonade', size='large'), SideOrder(number=1, side_type='garlic_fries', size='large')]",
        "output_NER": "a - number(1), large - drink_size(large), pink lemonade - drink_type(pink_lemonade), a - number(1), large - side_size(large), garlic fries - side_type(garlic_fries)"
    },
    {
        "input": "can i get a double cheeseburger with bacon jalapenos lettuce onions mayo and mustard",
        "input_augmented": "can i get a double cheeseburger with bacon jalapenos lettuce onions mayo and mustard\nItems Found: a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), bacon - topping(bacon), jalapenos - topping(jalapenos), lettuce - topping(lettuce), onions - topping(onion), mayo - topping(mayonnaise), mustard - topping(mustard)",
        "output": "A BurgerOrder(Number=1, MainDishType='double_cheese_burger', Toppings=[]) The SideOrder(Number=1, SideType='dough_butter', Size='None') The SideOrder(Number=1, SideType='dough_butter', Size='None') The SideOrder(Number=1, SideType='dough_butter', Size='None') The SideOrder(Number=1, SideType='dough_butter', Size='None') The SideOrder(Number=1, SideType='dough_butter', Size='None') The SideOrder(Number=1, SideType='dough_butter', Size='None') The SideOrder(Number=1, SideType='dough_b",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='bacon'), Topping(name='jalapenos'), Topping(name='lettuce'), Topping(name='onion'), Topping(name='mayonnaise'), Topping(name='mustard')])]",
        "output_NER": "a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), bacon - topping(bacon), jalapenos - topping(jalapenos), lettuce - topping(lettuce), onions - topping(onion), mayo - topping(mayonnaise), mustard - topping(mustard)"
    },
    {
        "input": "also a large vanilla shake",
        "input_augmented": "also a large vanilla shake\nItems Found: a - number(1), large - drink_size(large), vanilla shake - drink_type(vanilla_shake)",
        "output": "A Large Vanilla Drink",
        "expected": "[DrinkOrder(number=1, drink_type='vanilla_shake', size='large')]",
        "output_NER": "a - number(1), large - drink_size(large), vanilla shake - drink_type(vanilla_shake)"
    },
    {
        "input": "i'll have a double cheeseburger with cheddar cheese onions bacon lettuce mustard and ketchup",
        "input_augmented": "i'll have a double cheeseburger with cheddar cheese onions bacon lettuce mustard and ketchup\nItems Found: a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), cheddar cheese - topping(cheddar), onions - topping(onion), bacon - topping(bacon), lettuce - topping(lettuce), mustard - topping(mustard), ketchup - topping(ketchup)",
        "output": "A BurgerOrder(Number=1, MainDishType='double_cheese_burger', toppings=[Topping(name='O', qualifier='None', negation=False), Topping(name='O', qualifier='None', negation=False), Topping(name='O', qualifier='None', negation=False), Topping(name='O', qualifier='None', negation=False), Topping(name='O', qualifier='None', negation=False), Topping(name='O', qualifier='None', negation=False), Topping(name='O', qualifier='None', negation=False), Topping(name='O', qualifier='None', negation=False), Topping(name='O', qualifier='None', negation=False), Topping(name='",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='cheddar'), Topping(name='onion'), Topping(name='bacon'), Topping(name='lettuce'), Topping(name='mustard'), Topping(name='ketchup')])]",
        "output_NER": "a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), cheddar cheese - topping(cheddar), onions - topping(onion), bacon - topping(bacon), lettuce - topping(lettuce), mustard - topping(mustard), ketchup - topping(ketchup)"
    },
    {
        "input": "also a large fry and a medium coke",
        "input_augmented": "also a large fry and a medium coke\nItems Found: a - number(1), large - side_size(large), fry - side_type(french_fries), a - number(1), medium - drink_size(medium), coke - drink_type(coca_cola)",
        "output": "A SideOrderRequestResponseObject(object, number=1, side_type='french_fries', size='large', side_type='french_fries', drink_type='coke', drink_type='coca_cola', drink_type='None', drink_type='None') ]",
        "expected": "[SideOrder(number=1, side_type='french_fries', size='large'), DrinkOrder(number=1, drink_type='coca_cola', size='medium')]",
        "output_NER": "a - number(1), large - side_size(large), fry - side_type(french_fries), a - number(1), medium - drink_size(medium), coke - drink_type(coca_cola)"
    },
    {
        "input": "i would like to order a chicken sandwich with lettuce tomatoes mayonnaise and a medium pink lemonade large curly fries on the side",
        "input_augmented": "i would like to order a chicken sandwich with lettuce tomatoes mayonnaise and a medium pink lemonade large curly fries on the side\nItems Found: a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), lettuce - topping(lettuce), tomatoes - topping(tomato), mayonnaise - topping(mayonnaise), a - number(1), medium - drink_size(medium), pink lemonade - drink_type(pink_lemonade), large - side_size(large), curly fries - side_type(curly_fries)",
        "output": "A BurgerOrder(Number=1, MainDishType='chicken_sandwich', toppings=[Topping(name='lettuce', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='lettuce', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None",
        "expected": "[BurgerOrder(number=1, main_dish_type='chicken_sandwich', toppings=[Topping(name='lettuce'), Topping(name='tomato'), Topping(name='mayonnaise')]), DrinkOrder(number=1, drink_type='pink_lemonade', size='medium'), SideOrder(number=1, side_type='curly_fries', size='large')]",
        "output_NER": "a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), lettuce - topping(lettuce), tomatoes - topping(tomato), mayonnaise - topping(mayonnaise), a - number(1), medium - drink_size(medium), pink lemonade - drink_type(pink_lemonade), large - side_size(large), curly fries - side_type(curly_fries)"
    },
    {
        "input": "i'll have a cheeseburger with ketchup mustard onions and pickles a large order of garlic fries a small chocolate shake and i need a large dr pepper",
        "input_augmented": "i'll have a cheeseburger with ketchup mustard onions and pickles a large order of garlic fries a small chocolate shake and i need a large dr pepper\nItems Found: a - number(1), cheeseburger - main_dish_type(cheese_burger), ketchup - topping(ketchup), mustard - topping(mustard), onions - topping(onion), pickles - topping(pickle), a - number(1), large - side_size(large), garlic fries - side_type(garlic_fries), a - number(1), small - drink_size(small), chocolate shake - drink_type(chocolate_shake), a - number(1), large - drink_size(large), dr pepper - drink_type(dr_pepper)",
        "output": "A BurgerOrder(Number=1, MainDishType='cheese_burger', toppings=[Topping(name='ketchup'), Topping(name='tomatoes'), Topping(name='onions'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guarries'), Topping(name='guar",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='ketchup'), Topping(name='mustard'), Topping(name='onion'), Topping(name='pickle')]), SideOrder(number=1, side_type='garlic_fries', size='large'), DrinkOrder(number=1, drink_type='chocolate_shake', size='small'), DrinkOrder(number=1, drink_type='dr_pepper', size='large')]",
        "output_NER": "a - number(1), cheeseburger - main_dish_type(cheese_burger), ketchup - topping(ketchup), mustard - topping(mustard), onions - topping(onion), pickles - topping(pickle), a - number(1), large - side_size(large), garlic fries - side_type(garlic_fries), a - number(1), small - drink_size(small), chocolate shake - drink_type(chocolate_shake), a - number(1), large - drink_size(large), dr pepper - drink_type(dr_pepper)"
    },
    {
        "input": "double bacon cheeseburger with mustard and lettuce large curly fry and a milk",
        "input_augmented": "double bacon cheeseburger with mustard and lettuce large curly fry and a milk\nItems Found: bacon - topping(bacon), cheeseburger - main_dish_type(cheese_burger), mustard - topping(mustard), lettuce - topping(lettuce), large - side_size(large), curly fry - side_type(curly_fries), a - number(1), milk - drink_type(milk)",
        "output": "BurgerOrder(number=1, main_dish_type='bacon_bacon', toppings=[Topping(name='guarana', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='lettuce', qualifier='None', negation=False), Topping(name='guarana', qualifier='None', negation=False), Topping(name='guarana', qualifier='None', negation=False), Topping(name='guarana', qualifier='None', negation=False), Topping(name='guarana', qualifier='None', negation=False), Topping(name='guarana', qualifier='None', negation=False), Topping(name='guar",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='bacon'), Topping(name='mustard'), Topping(name='lettuce')]), SideOrder(number=1, side_type='french_fries', size='large'), DrinkOrder(number=1, drink_type='milk')]",
        "output_NER": "bacon - topping(bacon), cheeseburger - main_dish_type(cheese_burger), mustard - topping(mustard), lettuce - topping(lettuce), large - side_size(large), curly fry - side_type(curly_fries), a - number(1), milk - drink_type(milk)"
    },
    {
        "input": "i'll have a cheeseburger with lettuce onions pickles tomatoes bacon ketchup mustard and mayo",
        "input_augmented": "i'll have a cheeseburger with lettuce onions pickles tomatoes bacon ketchup mustard and mayo\nItems Found: a - number(1), cheeseburger - main_dish_type(cheese_burger), lettuce - topping(lettuce), onions - topping(onion), pickles - topping(pickle), tomatoes - topping(tomato), bacon - topping(bacon), ketchup - topping(ketchup), mustard - topping(mustard), mayo - topping(mayonnaise)",
        "output": "A BurgerOrder(Number=1, MainDishType='cheese_burger', ToppingDictionary=[]) The Response:",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='lettuce'), Topping(name='onion'), Topping(name='pickle'), Topping(name='tomato'), Topping(name='bacon'), Topping(name='ketchup'), Topping(name='mustard'), Topping(name='mayonnaise')])]",
        "output_NER": "a - number(1), cheeseburger - main_dish_type(cheese_burger), lettuce - topping(lettuce), onions - topping(onion), pickles - topping(pickle), tomatoes - topping(tomato), bacon - topping(bacon), ketchup - topping(ketchup), mustard - topping(mustard), mayo - topping(mayonnaise)"
    },
    {
        "input": "give me a medium coke and a large side of french fries",
        "input_augmented": "give me a medium coke and a large side of french fries\nItems Found: a - number(1), medium - drink_size(medium), coke - drink_type(coca_cola), a - number(1), large - side_size(large), french fries - side_type(french_fries)",
        "output": "A BURGERORDER INSTANCE",
        "expected": "[DrinkOrder(number=1, drink_type='coca_cola', size='medium'), SideOrder(number=1, side_type='french_fries', size='large')]",
        "output_NER": "a - number(1), medium - drink_size(medium), coke - drink_type(coca_cola), a - number(1), large - side_size(large), french fries - side_type(french_fries)"
    },
    {
        "input": "hi i'd like a cheeseburger with mustard and ketchup no mayo",
        "input_augmented": "hi i'd like a cheeseburger with mustard and ketchup no mayo\nItems Found: a - number(1), cheeseburger - main_dish_type(cheese_burger), mustard - topping(mustard), ketchup - topping(ketchup), no - not(not), mayo - topping(mayonnaise)",
        "output": "BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='guarana_mayonnaise', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='guarana_mayonnaise', qualifier='None', negation=False), Topping(name='guarana_mayonnaise', qualifier='None', negation=False), Topping(name='guarana_mayonnaise', qualifier='None', negation=False), Topping(name='guarana_mayonnaise', qualifier='None', negation=False), Topping",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='mustard'), Topping(name='ketchup'), Topping(name='mayonnaise', negation=True)])]",
        "output_NER": "a - number(1), cheeseburger - main_dish_type(cheese_burger), mustard - topping(mustard), ketchup - topping(ketchup), no - not(not), mayo - topping(mayonnaise)"
    },
    {
        "input": "i'd also like a side of large fries and a medium coke",
        "input_augmented": "i'd also like a side of large fries and a medium coke\nItems Found: a - number(1), large - side_size(large), fries - side_type(french_fries), a - number(1), medium - drink_size(medium), coke - drink_type(coca_cola)",
        "output": "A BurgerOrder(Number=1, MainDishType='french_fries', toppings=[Topping(name='french_filling', qualifier='None', qualifier='None', negation=False), Topping(name='french_filling', qualifier='None', qualifier='None', negation=False), Topping(name='french_filling', qualifier='None', qualifier='None', negation=False), Topping(name='french_filling', qualifier='None', qualifier='None', negation=False), Topping(name='french_filling', qualifier='None', qualifier='None', negation=False), Topping(name='french_filling', qualifier='None', qualifier='None', negation=False), Topping(name='f",
        "expected": "[SideOrder(number=1, side_type='french_fries', size='large'), DrinkOrder(number=1, drink_type='coca_cola', size='medium')]",
        "output_NER": "a - number(1), large - side_size(large), fries - side_type(french_fries), a - number(1), medium - drink_size(medium), coke - drink_type(coca_cola)"
    },
    {
        "input": "i'll have a hamburger topped with bacon and ketchup along with a large coke and large order of french fries",
        "input_augmented": "i'll have a hamburger topped with bacon and ketchup along with a large coke and large order of french fries\nItems Found: a - number(1), hamburger - main_dish_type(ham_burger), bacon - topping(bacon), ketchup - topping(ketchup), a - number(1), large - drink_size(large), coke - drink_type(coca_cola), large - side_size(large), french fries - side_type(french_fries)",
        "output": "A BurgerOrder(Number=1, MainDishType='hamburger_burger', toppings=[Topping(name='bacon', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='bacon', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False)]), SideOrder(Number=1, SideType='french_fries', size='None'), DrinkOrder(Number=1, SideType='french_fries', size='None'), DrinkOrder(Number=",
        "expected": "[BurgerOrder(number=1, main_dish_type='ham_burger', toppings=[Topping(name='bacon'), Topping(name='ketchup')]), DrinkOrder(number=1, drink_type='coca_cola', size='large'), SideOrder(number=1, side_type='french_fries', size='large')]",
        "output_NER": "a - number(1), hamburger - main_dish_type(ham_burger), bacon - topping(bacon), ketchup - topping(ketchup), a - number(1), large - drink_size(large), coke - drink_type(coca_cola), large - side_size(large), french fries - side_type(french_fries)"
    },
    {
        "input": "i'll have a chicken sandwich can you put lettuce and onions on that",
        "input_augmented": "i'll have a chicken sandwich can you put lettuce and onions on that\nItems Found: a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), lettuce - topping(lettuce), onions - topping(onion)",
        "output": "A BurgerOrder",
        "expected": "[BurgerOrder(number=1, main_dish_type='chicken_sandwich', toppings=[Topping(name='lettuce'), Topping(name='onion')])]",
        "output_NER": "a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), lettuce - topping(lettuce), onions - topping(onion)"
    },
    {
        "input": "also a large order of curly fries and a large root beer",
        "input_augmented": "also a large order of curly fries and a large root beer\nItems Found: a - number(1), large - side_size(large), curly fries - side_type(curly_fries), a - number(1), large - drink_size(large), root beer - drink_type(root_beer)",
        "output": "A BurgerOrder Number 1 Large Side Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size Large Drink Size",
        "expected": "[SideOrder(number=1, side_type='curly_fries', size='large'), DrinkOrder(number=1, drink_type='root_beer', size='large')]",
        "output_NER": "a - number(1), large - side_size(large), curly fries - side_type(curly_fries), a - number(1), large - drink_size(large), root beer - drink_type(root_beer)"
    },
    {
        "input": "hi can i get a double cheeseburger with bacon ketchup and mayonnaise a large diet coke and a large curly fries",
        "input_augmented": "hi can i get a double cheeseburger with bacon ketchup and mayonnaise a large diet coke and a large curly fries\nItems Found: a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), bacon - topping(bacon), ketchup - topping(ketchup), mayonnaise - topping(mayonnaise), a - number(1), large - drink_size(large), diet coke - drink_type(diet_coke), a - number(1), large - side_size(large), curly fries - side_type(curly_fries)",
        "output": "A BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='bacon', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='bacon', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='bacon', qualifier='None",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='bacon'), Topping(name='ketchup'), Topping(name='mayonnaise')]), DrinkOrder(number=1, drink_type='diet_coke', size='large'), SideOrder(number=1, side_type='curly_fries', size='large')]",
        "output_NER": "a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), bacon - topping(bacon), ketchup - topping(ketchup), mayonnaise - topping(mayonnaise), a - number(1), large - drink_size(large), diet coke - drink_type(diet_coke), a - number(1), large - side_size(large), curly fries - side_type(curly_fries)"
    },
    {
        "input": "i'll take a cheeseburger with onions and pickles and ketchup and one large coke please",
        "input_augmented": "i'll take a cheeseburger with onions and pickles and ketchup and one large coke please\nItems Found: a - number(1), cheeseburger - main_dish_type(cheese_burger), onions - topping(onion), pickles - topping(pickle), ketchup - topping(ketchup), one - number(1), large - drink_size(large), coke - drink_type(coca_cola)",
        "output": "A BurgerOrder(Number=1, MainDishType='cheese_burger', toppings=[Topping(name='onions', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='onions', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='sunchips', qualifier='None', negation=False), Topping(name='sunchips', qualifier='None', negation=False), Topping(name='sunchips', qualifier",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='onion'), Topping(name='pickle'), Topping(name='ketchup')]), DrinkOrder(number=1, drink_type='coca_cola', size='large')]",
        "output_NER": "a - number(1), cheeseburger - main_dish_type(cheese_burger), onions - topping(onion), pickles - topping(pickle), ketchup - topping(ketchup), one - number(1), large - drink_size(large), coke - drink_type(coca_cola)"
    },
    {
        "input": "can i get a cheeseburger with mayo and pickle only a small fry and chocolate shake please",
        "input_augmented": "can i get a cheeseburger with mayo and pickle only a small fry and chocolate shake please\nItems Found: a - number(1), cheeseburger - main_dish_type(cheese_burger), mayo - topping(mayonnaise), pickle - topping(pickle), a - number(1), small - side_size(small), fry - side_type(french_fries), chocolate shake - drink_type(chocolate_shake)",
        "output": "BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='fajita_mustard', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='fajita_mustard', qualifier='None', negation=False), Topping(name='fajita_mustard', qualifier='None', negation=False), Topping(name='fajita_mustard', qualifier='None', negation=False), Topping(name='fajita_mustard', qualifier='None', negation=False), Topping(name='fajita_mustard', qualifier='None', negation=False), Topping(name",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='mayonnaise'), Topping(name='pickle')]), SideOrder(number=1, side_type='french_fries', size='small'), DrinkOrder(number=1, drink_type='chocolate_shake')]",
        "output_NER": "a - number(1), cheeseburger - main_dish_type(cheese_burger), mayo - topping(mayonnaise), pickle - topping(pickle), a - number(1), small - side_size(small), fry - side_type(french_fries), chocolate shake - drink_type(chocolate_shake)"
    },
    {
        "input": "i'd like a double cheeseburger with onions and mustard large garlic fries and a strawberry shake",
        "input_augmented": "i'd like a double cheeseburger with onions and mustard large garlic fries and a strawberry shake\nItems Found: a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), onions - topping(onion), mustard - topping(mustard), large - side_size(large), garlic fries - side_type(garlic_fries), a - number(1), strawberry shake - drink_type(strawberry_shake)",
        "output": "ABURGERORDERNUMBER(1, double_cheese_burger, toppings=[]), SIDEORDERNUMBER(1, strawberries_shake), SIDEORDERNUMBER(1, double_cheese_burger), SIDEORDERNUMBER(1, double_cheese_burger), SIDEORDERNUMBER(1, double_cheese_burger), SIDEORDERNUMBER(1, double_cheese_burger), SIDEORDERNUMBER(1, double_cheese_burger), SIDEORDERNUMBER(1, double_cheese_burger), SIDENOTEBOOKSNUMBER(0), SIDENOTEBOOKSNUMBER(0), SIDENOTEBOOKSNUMBER(0), SIDENOTEBOOKSNUMBER(0), SIDENOTEBOOKSNUMBER(0), S",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='onion'), Topping(name='mustard')]), SideOrder(number=1, side_type='garlic_fries', size='large'), DrinkOrder(number=1, drink_type='strawberry_shake')]",
        "output_NER": "a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), onions - topping(onion), mustard - topping(mustard), large - side_size(large), garlic fries - side_type(garlic_fries), a - number(1), strawberry shake - drink_type(strawberry_shake)"
    },
    {
        "input": "i would like a chicken sandwich with lettuce mayo and tomatoes",
        "input_augmented": "i would like a chicken sandwich with lettuce mayo and tomatoes\nItems Found: a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), lettuce - topping(lettuce), mayo - topping(mayonnaise), tomatoes - topping(tomato)",
        "output": "A BurgerOrder",
        "expected": "[BurgerOrder(number=1, main_dish_type='chicken_sandwich', toppings=[Topping(name='lettuce'), Topping(name='mayonnaise'), Topping(name='tomato')])]",
        "output_NER": "a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), lettuce - topping(lettuce), mayo - topping(mayonnaise), tomatoes - topping(tomato)"
    },
    {
        "input": "i would also like a small seven up",
        "input_augmented": "i would also like a small seven up\nItems Found: a - number(1), small - drink_size(small), seven up - drink_type(seven_up)",
        "output": "A BurgerOrder(number=1, main_dish_type='southwest_bread', toppings=[Topping(name='southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest_southwest",
        "expected": "[DrinkOrder(number=1, drink_type='seven_up', size='small')]",
        "output_NER": "a - number(1), small - drink_size(small), seven up - drink_type(seven_up)"
    },
    {
        "input": "add a large order of curly fries too",
        "input_augmented": "add a large order of curly fries too\nItems Found: a - number(1), large - side_size(large), curly fries - side_type(curly_fries)",
        "output": "A BurgerOrder(number=1, main_dish_type='sunchat_butter', toppings=[Topping(name='fajita_corn', qualifier='None', negation=False), Topping(name='fajita_corn', qualifier='None', negation=False), Topping(name='fajita_corn', qualifier='None', negation=False), Topping(name='fajita_corn', qualifier='None', negation=False), Topping(name='fajita_corn', qualifier='None', negation=False), Topping(name='fajita_corn', qualifier='None', negation=False), Topping(name='fajita_corn', qualifier='None', negation=False)]), SideOrder(number",
        "expected": "[SideOrder(number=1, side_type='curly_fries', size='large')]",
        "output_NER": "a - number(1), large - side_size(large), curly fries - side_type(curly_fries)"
    },
    {
        "input": "can i have two cheeseburgers onions only a chicken sandwich two large french fries and two medium pink lemonades",
        "input_augmented": "can i have two cheeseburgers onions only a chicken sandwich two large french fries and two medium pink lemonades\nItems Found: two - number(2), cheeseburgers - main_dish_type(cheese_burger), onions - topping(onion), a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), two - number(2), large - side_size(large), french fries - side_type(french_fries), two - number(2), medium - drink_size(medium), pink lemonades - drink_type(pink_lemonade)",
        "output": "A BurgerOrder(number=2, main_dish_type='chicken_sandwich', toppings=[Topping(name='cheese', qualifier='None', negation=False), Topping(name='onions', qualifier='None', negation=False), Topping(name='cheese', qualifier='None', negation=False), Topping(name='cheese', qualifier='None', negation=False), Topping(name='cheese', qualifier='None', negation=False), Topping(name='cheese', qualifier='None', negation=False), Topping(name='cheese', qualifier='None', negation=False), Topping(name='cheese', qualifier='None', negation=False), Topping(name='cheese', qualifier='None",
        "expected": "[BurgerOrder(number=2, main_dish_type='cheese_burger', toppings=[Topping(name='onion')]), BurgerOrder(number=1, main_dish_type='chicken_sandwich'), SideOrder(number=2, side_type='french_fries', size='large'), DrinkOrder(number=2, drink_type='pink_lemonade', size='medium')]",
        "output_NER": "two - number(2), cheeseburgers - main_dish_type(cheese_burger), onions - topping(onion), a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), two - number(2), large - side_size(large), french fries - side_type(french_fries), two - number(2), medium - drink_size(medium), pink lemonades - drink_type(pink_lemonade)"
    },
    {
        "input": "can i have a chicken sandwich with a side of large curly fries and a medium pink lemonade",
        "input_augmented": "can i have a chicken sandwich with a side of large curly fries and a medium pink lemonade\nItems Found: a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), a - number(1), large - side_size(large), curly fries - side_type(curly_fries), a - number(1), medium - drink_size(medium), pink lemonade - drink_type(pink_lemonade)",
        "output": "A BurgerOrder(Number=1, MainDishType='chicken_sandwich', toppings=[Topping(name='sunchard', qualifier='None', qualifier='None', negation=False), Topping(name='sunchard', qualifier='None', qualifier='None', negation=False), Topping(name='sunchard', qualifier='None', qualifier='None', negation=False), Topping(name='sunchard', qualifier='None', qualifier='None', negation=False), Topping(name='sunchard', qualifier='None', qualifier='None', negation=False), Topping(name='sunchard', qualifier='None', qualifier='None', negation=False), Topping(name='sunchard', qualifier='",
        "expected": "[BurgerOrder(number=1, main_dish_type='chicken_sandwich'), SideOrder(number=1, side_type='curly_fries', size='large'), DrinkOrder(number=1, drink_type='pink_lemonade', size='medium')]",
        "output_NER": "a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), a - number(1), large - side_size(large), curly fries - side_type(curly_fries), a - number(1), medium - drink_size(medium), pink lemonade - drink_type(pink_lemonade)"
    },
    {
        "input": "could i get a cheeseburger with cheddar cheese lettuce tomato pickles and ketchup and a side of small fries and a medium coke",
        "input_augmented": "could i get a cheeseburger with cheddar cheese lettuce tomato pickles and ketchup and a side of small fries and a medium coke\nItems Found: a - number(1), cheeseburger - main_dish_type(cheese_burger), cheddar cheese - topping(cheddar), lettuce - topping(lettuce), tomato - topping(tomato), pickles - topping(pickle), ketchup - topping(ketchup), a - number(1), small - side_size(small), fries - side_type(french_fries), a - number(1), medium - drink_size(medium), coke - drink_type(coca_cola)",
        "output": "A BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='cheese', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='lettuce', qualifier='None', negation=False), Topping(name='cheese', qualifier='None', negation=False), Topping(name='cheese', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='cheese', qualifier='None', negation=False), Topping(name='cheese', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None',",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='cheddar'), Topping(name='lettuce'), Topping(name='tomato'), Topping(name='pickle'), Topping(name='ketchup')]), SideOrder(number=1, side_type='french_fries', size='small'), DrinkOrder(number=1, drink_type='coca_cola', size='medium')]",
        "output_NER": "a - number(1), cheeseburger - main_dish_type(cheese_burger), cheddar cheese - topping(cheddar), lettuce - topping(lettuce), tomato - topping(tomato), pickles - topping(pickle), ketchup - topping(ketchup), a - number(1), small - side_size(small), fries - side_type(french_fries), a - number(1), medium - drink_size(medium), coke - drink_type(coca_cola)"
    },
    {
        "input": "for my main dish i'll have a chicken sandwich with lettuce ketchup and mayo",
        "input_augmented": "for my main dish i'll have a chicken sandwich with lettuce ketchup and mayo\nItems Found: a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), lettuce - topping(lettuce), ketchup - topping(ketchup), mayo - topping(mayonnaise)",
        "output": "a chicken sandwich with lettuce and ketchup and a little bit of cheese",
        "expected": "[BurgerOrder(number=1, main_dish_type='chicken_sandwich', toppings=[Topping(name='lettuce'), Topping(name='ketchup'), Topping(name='mayonnaise')])]",
        "output_NER": "a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), lettuce - topping(lettuce), ketchup - topping(ketchup), mayo - topping(mayonnaise)"
    },
    {
        "input": "i want fries for a side and for my drink can i get a coke please",
        "input_augmented": "i want fries for a side and for my drink can i get a coke please\nItems Found: fries - side_type(french_fries), a - number(1), a - number(1), coke - drink_type(coca_cola)",
        "output": "A SideOrder(Number=1, SideType='french_fries', Size=1, DrinkOrder=[SideOrder(Number=1, DrinkType='coca_cola', Size=1), SideOrder(Number=1, DrinkType='coca_cola', Size=1)]) The Output Should Be A List Of Those Objects.",
        "expected": "[SideOrder(number=1, side_type='french_fries'), DrinkOrder(number=1, drink_type='coca_cola')]",
        "output_NER": "fries - side_type(french_fries), a - number(1), a - number(1), coke - drink_type(coca_cola)"
    },
    {
        "input": "i'd like a cheeseburger with mayonnaise lettuce and tomato small fries and a medium dr pepper",
        "input_augmented": "i'd like a cheeseburger with mayonnaise lettuce and tomato small fries and a medium dr pepper\nItems Found: a - number(1), cheeseburger - main_dish_type(cheese_burger), mayonnaise - topping(mayonnaise), lettuce - topping(lettuce), tomato - topping(tomato), small - side_size(small), fries - side_type(french_fries), a - number(1), medium - drink_size(medium), dr pepper - drink_type(dr_pepper)",
        "output": "A BurgerOrder(Number=1, MainDishType='cheese_burger', toppings=[Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='fajita_vegg', qualifier='None', negation=False), Topping(name='fajita_vegg', qualifier='None', negation=False), Topping(name='fajita_vegg', qualifier='None', negation=False), Topping(name='fajita_vegg', qualifier='None', negation=False), Topping(name='fajita_vegg', qualifier='None', negation=False), Topping(name='fajita_vegg', qualifier='None', negation=False), Topping(name='fajita_ve",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='mayonnaise'), Topping(name='lettuce'), Topping(name='tomato')]), SideOrder(number=1, side_type='french_fries', size='small'), DrinkOrder(number=1, drink_type='dr_pepper', size='medium')]",
        "output_NER": "a - number(1), cheeseburger - main_dish_type(cheese_burger), mayonnaise - topping(mayonnaise), lettuce - topping(lettuce), tomato - topping(tomato), small - side_size(small), fries - side_type(french_fries), a - number(1), medium - drink_size(medium), dr pepper - drink_type(dr_pepper)"
    },
    {
        "input": "vegan burger topping tomato mustard lettuce pickle",
        "input_augmented": "vegan burger topping tomato mustard lettuce pickle\nItems Found: vegan burger - main_dish_type(vegan_burger), tomato - topping(tomato), mustard - topping(mustard), lettuce - topping(lettuce), pickle - topping(pickle)",
        "output": "burger order one vegan burger with lettuce and cheese",
        "expected": "[BurgerOrder(number=1, main_dish_type='vegan_burger', toppings=[Topping(name='tomato'), Topping(name='mustard'), Topping(name='lettuce'), Topping(name='pickle')])]",
        "output_NER": "vegan burger - main_dish_type(vegan_burger), tomato - topping(tomato), mustard - topping(mustard), lettuce - topping(lettuce), pickle - topping(pickle)"
    },
    {
        "input": "side curly fries small",
        "input_augmented": "side curly fries small\nItems Found: curly fries - side_type(curly_fries), small - side_size(small)",
        "output": "SideOrder(number=1, side_type='sweet_potato_fry', size='None', side_type='sunchor_fridge', size='None')",
        "expected": "[SideOrder(number=1, side_type='curly_fries', size='small')]",
        "output_NER": "curly fries - side_type(curly_fries), small - side_size(small)"
    },
    {
        "input": "drink seven up",
        "input_augmented": "drink seven up\nItems Found: seven up - drink_type(seven_up)",
        "output": "SideOrder(number=1, side_type='dough_butter', size='None')",
        "expected": "[DrinkOrder(number=1, drink_type='seven_up')]",
        "output_NER": "seven up - drink_type(seven_up)"
    },
    {
        "input": "can i get a plain chicken sandwich small curly fries and a medium dr pepper",
        "input_augmented": "can i get a plain chicken sandwich small curly fries and a medium dr pepper\nItems Found: a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), small - side_size(small), curly fries - side_type(curly_fries), a - number(1), medium - drink_size(medium), dr pepper - drink_type(dr_pepper)",
        "output": "A BurgerOrder(number=1, main_dish_type='chicken_sandwich', toppings=[Topping(name='tomatoes', qualifier='None', qualifier='None', negation=False), Topping(name='caesar', qualifier='None', qualifier='None', negation=False), Topping(name='fajita_corn', qualifier='None', qualifier='None', negation=False), Topping(name='fajita_corn', qualifier='None', qualifier='None', negation=False), Topping(name='caesar', qualifier='None', qualifier='None', negation=False), Topping(name='fajita_corn', qualifier='None', qualifier='None', negation=False), Topping(name='caesar',",
        "expected": "[BurgerOrder(number=1, main_dish_type='chicken_sandwich'), SideOrder(number=1, side_type='curly_fries', size='small'), DrinkOrder(number=1, drink_type='dr_pepper', size='medium')]",
        "output_NER": "a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), small - side_size(small), curly fries - side_type(curly_fries), a - number(1), medium - drink_size(medium), dr pepper - drink_type(dr_pepper)"
    },
    {
        "input": "let me have a cheeseburger with lettuce tomatoes onions pickles ketchup and mustard",
        "input_augmented": "let me have a cheeseburger with lettuce tomatoes onions pickles ketchup and mustard\nItems Found: a - number(1), cheeseburger - main_dish_type(cheese_burger), lettuce - topping(lettuce), tomatoes - topping(tomato), onions - topping(onion), pickles - topping(pickle), ketchup - topping(ketchup), mustard - topping(mustard)",
        "output": "BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='lettuce'), Topping(name='tomatoes'), Topping(name='onions'), Topping(name='pickles'), Topping(name='ketchup'), Topping(name='mustard'), Topping(name='pickles'), Topping(name='pickles'), Topping(name='pickles'), Topping(name='pickles'), Topping(name='pickles'), Topping(name='pickles'), Topping(name='pickles'), Topping(name='pickles'), Topping(name='pickles'), Topping(name='pickles'), Topping(name='pickles'), Topping(name='pickles'), Topping(name='pick",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='lettuce'), Topping(name='tomato'), Topping(name='onion'), Topping(name='pickle'), Topping(name='ketchup'), Topping(name='mustard')])]",
        "output_NER": "a - number(1), cheeseburger - main_dish_type(cheese_burger), lettuce - topping(lettuce), tomatoes - topping(tomato), onions - topping(onion), pickles - topping(pickle), ketchup - topping(ketchup), mustard - topping(mustard)"
    },
    {
        "input": "also let me have a large curly fry with a large sweet tea",
        "input_augmented": "also let me have a large curly fry with a large sweet tea\nItems Found: a - number(1), large - side_size(large), curly fry - side_type(curly_fries), a - number(1), large - drink_size(large), tea - drink_type(iced_tea)",
        "output": "A BurgerOrder(number=1, main_dish_type='fry', toppings=[Topping(name='sweet_tea', qualifier='None', negation=False), Topping(name='sweet_tea', qualifier='None', negation=False), Topping(name='sweet_tea', qualifier='None', negation=False), Topping(name='sweet_tea', qualifier='None', negation=False), Topping(name='sweet_tea', qualifier='None', negation=False), Topping(name='sweet_tea', qualifier='None', negation=False), Topping(name='sweet_tea', qualifier='None', negation=False), Topping(name='sweet_tea', qualifier='None', negation=False), Topping(name='sweet",
        "expected": "[SideOrder(number=1, side_type='curly_fries', size='large'), DrinkOrder(number=1, drink_type='iced_tea', size='large')]",
        "output_NER": "a - number(1), large - side_size(large), curly fry - side_type(curly_fries), a - number(1), large - drink_size(large), tea - drink_type(iced_tea)"
    },
    {
        "input": "let me get a double cheeseburger with blue cheese lettuce and mustard",
        "input_augmented": "let me get a double cheeseburger with blue cheese lettuce and mustard\nItems Found: a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), blue cheese - topping(blue_cheese), lettuce - topping(lettuce), mustard - topping(mustard)",
        "output": "A BurgerOrder Number 1, DoubleCheeseBooker Class Object",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='blue_cheese'), Topping(name='lettuce'), Topping(name='mustard')])]",
        "output_NER": "a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), blue cheese - topping(blue_cheese), lettuce - topping(lettuce), mustard - topping(mustard)"
    },
    {
        "input": "no drinks for me today but i'll take a small order of french fries",
        "input_augmented": "no drinks for me today but i'll take a small order of french fries\nItems Found: no - not(not), today - date, a - number(1), small - side_size(small), french fries - side_type(french_fries)",
        "output": "a side order for me for a little french fries",
        "expected": "[SideOrder(number=1, side_type='french_fries', size='small')]",
        "output_NER": "no - not(not), today - date, a - number(1), small - side_size(small), french fries - side_type(french_fries)"
    },
    {
        "input": "i'd like to order a double cheeseburger",
        "input_augmented": "i'd like to order a double cheeseburger\nItems Found: a - number(1), double cheeseburger - main_dish_type(double_cheese_burger)",
        "output": "A BurgerOrder",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger')]",
        "output_NER": "a - number(1), double cheeseburger - main_dish_type(double_cheese_burger)"
    },
    {
        "input": "i'd also like to get an order of large curly fries and a large pink lemonade with that",
        "input_augmented": "i'd also like to get an order of large curly fries and a large pink lemonade with that\nItems Found: an - number(1), large - side_size(large), curly fries - side_type(curly_fries), a - number(1), large - drink_size(large), pink lemonade - drink_type(pink_lemonade)",
        "output": "A BurgerOrder(number=1, main_dish_type='fajita_bbq', toppings=[Topping(name='lemon', qualifier='None', negation=False), Topping(name='None', qualifier='None', negation=False), Topping(name='None', qualifier='None', negation=False), Topping(name='None', qualifier='None', negation=False), Topping(name='None', qualifier='None', negation=False), Topping(name='None', qualifier='None', negation=False), Topping(name='None', qualifier='None', negation=False), Topping(name='None', qualifier='None', negation=False), Topping(name='None', qualifier='None', negation=False), Topping",
        "expected": "[SideOrder(number=1, side_type='curly_fries', size='large'), DrinkOrder(number=1, drink_type='pink_lemonade', size='large')]",
        "output_NER": "an - number(1), large - side_size(large), curly fries - side_type(curly_fries), a - number(1), large - drink_size(large), pink lemonade - drink_type(pink_lemonade)"
    },
    {
        "input": "for the burger i want mustard and mayo lettuce tomatoes onions bacon jalapenos",
        "input_augmented": "for the burger i want mustard and mayo lettuce tomatoes onions bacon jalapenos\nItems Found: burger - main_dish_type(ham_burger), mustard - topping(mustard), mayo - topping(mayonnaise), lettuce - topping(lettuce), tomatoes - topping(tomato), onions - topping(onion), bacon - topping(bacon), jalapenos - topping(jalapenos)",
        "output": "A BurgerOrder with no side of bacon",
        "expected": "[BurgerOrder(number=1, main_dish_type='ham_burger', toppings=[Topping(name='mustard'), Topping(name='mayonnaise'), Topping(name='lettuce'), Topping(name='tomato'), Topping(name='onion'), Topping(name='bacon'), Topping(name='jalapenos')])]",
        "output_NER": "burger - main_dish_type(ham_burger), mustard - topping(mustard), mayo - topping(mayonnaise), lettuce - topping(lettuce), tomatoes - topping(tomato), onions - topping(onion), bacon - topping(bacon), jalapenos - topping(jalapenos)"
    },
    {
        "input": "i would like a double cheeseburger with lettuce ketchup onions and bacon",
        "input_augmented": "i would like a double cheeseburger with lettuce ketchup onions and bacon\nItems Found: a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), lettuce - topping(lettuce), ketchup - topping(ketchup), onions - topping(onion), bacon - topping(bacon)",
        "output": "A BurgerOrder(Number=1, MainDishType='double_cheese_burger', Toppings=[Topping(name='lettuce', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='onions', qualifier='None', negation=False), Topping(name='bacon', qualifier='None', negation=False)]), SideOrder(Number=1, SideType='double_cheese_burger', Size='None'), SideOrder(Number=1, SideType='double_cheese_burger', Size='None')),",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='lettuce'), Topping(name='ketchup'), Topping(name='onion'), Topping(name='bacon')])]",
        "output_NER": "a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), lettuce - topping(lettuce), ketchup - topping(ketchup), onions - topping(onion), bacon - topping(bacon)"
    },
    {
        "input": "i would also like a small curly fries and a medium diet coke",
        "input_augmented": "i would also like a small curly fries and a medium diet coke\nItems Found: a - number(1), small - side_size(small), curly fries - side_type(curly_fries), a - number(1), medium - drink_size(medium), diet coke - drink_type(diet_coke)",
        "output": "A BurgerOrder(number=1, main_dish_type='dietet_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_burrito_b",
        "expected": "[SideOrder(number=1, side_type='curly_fries', size='small'), DrinkOrder(number=1, drink_type='diet_coke', size='medium')]",
        "output_NER": "a - number(1), small - side_size(small), curly fries - side_type(curly_fries), a - number(1), medium - drink_size(medium), diet coke - drink_type(diet_coke)"
    },
    {
        "input": "i'd like a chicken sandwich with pickles tomatoes lettuce and mayo",
        "input_augmented": "i'd like a chicken sandwich with pickles tomatoes lettuce and mayo\nItems Found: a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), pickles - topping(pickle), tomatoes - topping(tomato), lettuce - topping(lettuce), mayo - topping(mayonnaise)",
        "output": "A BurgerOrder(Number=1, MainDishType='chicken_sandwich', ToppingDictionary=[])",
        "expected": "[BurgerOrder(number=1, main_dish_type='chicken_sandwich', toppings=[Topping(name='pickle'), Topping(name='tomato'), Topping(name='lettuce'), Topping(name='mayonnaise')])]",
        "output_NER": "a - number(1), chicken sandwich - main_dish_type(chicken_sandwich), pickles - topping(pickle), tomatoes - topping(tomato), lettuce - topping(lettuce), mayo - topping(mayonnaise)"
    },
    {
        "input": "with small garlic fries and a small seven up",
        "input_augmented": "with small garlic fries and a small seven up\nItems Found: small - side_size(small), garlic fries - side_type(garlic_fries), a - number(1), small - drink_size(small), seven up - drink_type(seven_up)",
        "output": "A BurgerOrder with number 1 small fried breads, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips, a little bit of chips,",
        "expected": "[SideOrder(number=1, side_type='garlic_fries', size='small'), DrinkOrder(number=1, drink_type='seven_up', size='small')]",
        "output_NER": "small - side_size(small), garlic fries - side_type(garlic_fries), a - number(1), small - drink_size(small), seven up - drink_type(seven_up)"
    },
    {
        "input": "can i have a cheeseburger with ketchup and onions small fries and a small diet coke",
        "input_augmented": "can i have a cheeseburger with ketchup and onions small fries and a small diet coke\nItems Found: a - number(1), cheeseburger - main_dish_type(cheese_burger), ketchup - topping(ketchup), onions - topping(onion), small - side_size(small), fries - side_type(french_fries), a - number(1), small - drink_size(small), diet coke - drink_type(diet_coke)",
        "output": "A BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='ketchup'), Topping(name='onions', qualifier='small', negation=False), Topping(name='sunchard', qualifier='None', negation=False), Topping(name='sunchard', qualifier='None', negation=False), Topping(name='sunchard', qualifier='None', negation=False), Topping(name='sunchard', qualifier='None', negation=False), Topping(name='sunchard', qualifier='None', negation=False), Topping(name='sunchard', qualifier='None', negation=False), Topping(name='sunchard', qualifier='None', neg",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='ketchup'), Topping(name='onion')]), SideOrder(number=1, side_type='french_fries', size='small'), DrinkOrder(number=1, drink_type='diet_coke', size='small')]",
        "output_NER": "a - number(1), cheeseburger - main_dish_type(cheese_burger), ketchup - topping(ketchup), onions - topping(onion), small - side_size(small), fries - side_type(french_fries), a - number(1), small - drink_size(small), diet coke - drink_type(diet_coke)"
    },
    {
        "input": "hey i would like a double cheeseburger with onions ketchup mayo and bacon",
        "input_augmented": "hey i would like a double cheeseburger with onions ketchup mayo and bacon\nItems Found: a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), onions - topping(onion), ketchup - topping(ketchup), mayo - topping(mayonnaise), bacon - topping(bacon)",
        "output": "burgerordernumber(1, double_cheese_burger, main_dish_type=bacon_class, toppings=[Topping(name='fajita_cheese', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='balsam_bas', qualifier='None', negation=False), Topping(name='balsam_bas', qualifier='None', negation=False), Topping(name='balsam_bas', qualifier='None', negation=False), Topping(name='balsam_bas', qualifier='None', negation=False), Topping(name='balsam_bas', qualifier='None', negation=False)])]",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='onion'), Topping(name='ketchup'), Topping(name='mayonnaise'), Topping(name='bacon')])]",
        "output_NER": "a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), onions - topping(onion), ketchup - topping(ketchup), mayo - topping(mayonnaise), bacon - topping(bacon)"
    },
    {
        "input": "also french fries and a large diet coke",
        "input_augmented": "also french fries and a large diet coke\nItems Found: french fries - side_type(french_fries), a - number(1), large - drink_size(large), diet coke - drink_type(diet_coke)",
        "output": "A BurgerOrder(number=1, main_dish_type='diet_frisks', toppings=[Topping(name='diet_coke', qualifier='None', negation=True), Topping(name='diet_coke', qualifier='None', negation=True)]), SideOrder(number=1, side_type='diet_frisks', size='large'))",
        "expected": "[SideOrder(number=1, side_type='french_fries'), DrinkOrder(number=1, drink_type='diet_coke', size='large')]",
        "output_NER": "french fries - side_type(french_fries), a - number(1), large - drink_size(large), diet coke - drink_type(diet_coke)"
    },
    {
        "input": "i need four cheeseburgers with lettuce and tomato",
        "input_augmented": "i need four cheeseburgers with lettuce and tomato\nItems Found: four - number(4), cheeseburgers - main_dish_type(cheese_burger), lettuce - topping(lettuce), tomato - topping(tomato)",
        "output": "a burger order with cheeseburgers with lettuce and tomato",
        "expected": "[BurgerOrder(number=4, main_dish_type='cheese_burger', toppings=[Topping(name='lettuce'), Topping(name='tomato')])]",
        "output_NER": "four - number(4), cheeseburgers - main_dish_type(cheese_burger), lettuce - topping(lettuce), tomato - topping(tomato)"
    },
    {
        "input": "one hamburger plain just the meat and bun and five orders of fries",
        "input_augmented": "one hamburger plain just the meat and bun and five orders of fries\nItems Found: one - number(1), hamburger - main_dish_type(ham_burger), five - number(5), fries - side_type(french_fries)",
        "output": "A BurgerOrder(number=1, main_dish_type='hamburger_burger', toppings=[Topping(name='meat', qualifier='None', negation=False), Topping(name='bun', qualifier='None', negation=False), Topping(name='bun', qualifier='None', negation=False), Topping(name='bun', qualifier='None', negation=False), Topping(name='bun', qualifier='None', negation=False), Topping(name='french_fries', qualifier='None', negation=True)]), SideOrder(number=5, side_type='french_fries', size='None'), SideOrder(number=1, side_type='french_fries', size='None'))",
        "expected": "[BurgerOrder(number=1, main_dish_type='ham_burger'), SideOrder(number=5, side_type='french_fries')]",
        "output_NER": "one - number(1), hamburger - main_dish_type(ham_burger), five - number(5), fries - side_type(french_fries)"
    },
    {
        "input": "i also need three small cokes and two small coffees thank you",
        "input_augmented": "i also need three small cokes and two small coffees thank you\nItems Found: three - number(3), small - drink_size(small), cokes - drink_type(coca_cola), two - number(2), small - drink_size(small), coffees - drink_type(coffee)",
        "output": "A BurgerOrder(number=3, main_dish_type='cokes', toppings=[]), SideOrder(number=2, side_type='coca_cola', size='small'), SideOrder(number=2, side_type='coffee', size='small'))",
        "expected": "[DrinkOrder(number=3, drink_type='coca_cola', size='small'), DrinkOrder(number=2, drink_type='coffee', size='small')]",
        "output_NER": "three - number(3), small - drink_size(small), cokes - drink_type(coca_cola), two - number(2), small - drink_size(small), coffees - drink_type(coffee)"
    },
    {
        "input": "can i get a hamburger with onions",
        "input_augmented": "can i get a hamburger with onions\nItems Found: a - number(1), hamburger - main_dish_type(ham_burger), onions - topping(onion)",
        "output": "A BurgerOrder(number=1, main_dish_type='hamburger_burger', toppings=[Topping(name='onions', qualifier='None', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', qualifier='None', negation=False), Topping(name='onions', qualifier='None', qualifier='None', negation=False)]), SideOrder(number=1, side_type='french_fries', size='large')]",
        "expected": "[BurgerOrder(number=1, main_dish_type='ham_burger', toppings=[Topping(name='onion')])]",
        "output_NER": "a - number(1), hamburger - main_dish_type(ham_burger), onions - topping(onion)"
    },
    {
        "input": "and a small order of french fries",
        "input_augmented": "and a small order of french fries\nItems Found: a - number(1), small - side_size(small), french fries - side_type(french_fries)",
        "output": "SideOrder(number=1, side_type='french_fries', size='small', side_type='french_fries', size='None', drink_type='None', dessert_type='None')",
        "expected": "[SideOrder(number=1, side_type='french_fries', size='small')]",
        "output_NER": "a - number(1), small - side_size(small), french fries - side_type(french_fries)"
    },
    {
        "input": "give me a bacon cheeseburger with mustard ketchup and extra onions",
        "input_augmented": "give me a bacon cheeseburger with mustard ketchup and extra onions\nItems Found: a - number(1), bacon - topping(bacon), cheeseburger - main_dish_type(cheese_burger), mustard - topping(mustard), ketchup - topping(ketchup), extra - quantity(extra), onions - topping(onion)",
        "output": "a burger order with bacon and cheese with mustard and extra chips",
        "expected": "[BurgerOrder(number=1, main_dish_type='cheese_burger', toppings=[Topping(name='onion', qualifier='extra'), Topping(name='bacon'), Topping(name='mustard'), Topping(name='ketchup')])]",
        "output_NER": "a - number(1), bacon - topping(bacon), cheeseburger - main_dish_type(cheese_burger), mustard - topping(mustard), ketchup - topping(ketchup), extra - quantity(extra), onions - topping(onion)"
    },
    {
        "input": "then i'll take an order of large curly fries and one large seven up",
        "input_augmented": "then i'll take an order of large curly fries and one large seven up\nItems Found: an - number(1), large - side_size(large), curly fries - side_type(curly_fries), one - number(1), large - drink_size(large), seven up - drink_type(seven_up)",
        "output": "A BurgerOrder(number=1, main_dish_type='fajita_bbq', toppings=[Topping(name='fajita_cheap', qualifier='None', negation=False), Topping(name='fajita_cheap', qualifier='None', negation=False), Topping(name='fajita_cheap', qualifier='None', negation=False)]), SideOrder(number=1, side_type='churn_down_fajita_cheap', size='None'), SideOrder(number=1, side_type='churn_down_fajita_cheap', size='large'), SideOrder(number=1, side_type='churn_down_fajita_cheap', size='large'), SideOrder(number=1, side_type",
        "expected": "[SideOrder(number=1, side_type='curly_fries', size='large'), DrinkOrder(number=1, drink_type='seven_up', size='large')]",
        "output_NER": "an - number(1), large - side_size(large), curly fries - side_type(curly_fries), one - number(1), large - drink_size(large), seven up - drink_type(seven_up)"
    },
    {
        "input": "hi i want two hamburgers cheddar cheese lettuce tomatoes ketchup onions pickles and mustard on them two french fries and two medium cokes please",
        "input_augmented": "hi i want two hamburgers cheddar cheese lettuce tomatoes ketchup onions pickles and mustard on them two french fries and two medium cokes please\nItems Found: two - number(2), hamburgers - main_dish_type(ham_burger), cheddar cheese - topping(cheddar), lettuce - topping(lettuce), tomatoes - topping(tomato), ketchup - topping(ketchup), onions - topping(onion), pickles - topping(pickle), mustard - topping(mustard), two - number(2), french fries - side_type(french_fries), two - number(2), medium - drink_size(medium), cokes - drink_type(coca_cola)",
        "output": "A BurgerOrder",
        "expected": "[BurgerOrder(number=2, main_dish_type='ham_burger', toppings=[Topping(name='cheddar'), Topping(name='lettuce'), Topping(name='tomato'), Topping(name='ketchup'), Topping(name='onion'), Topping(name='pickle'), Topping(name='mustard')]), SideOrder(number=2, side_type='french_fries'), DrinkOrder(number=2, drink_type='coca_cola', size='medium')]",
        "output_NER": "two - number(2), hamburgers - main_dish_type(ham_burger), cheddar cheese - topping(cheddar), lettuce - topping(lettuce), tomatoes - topping(tomato), ketchup - topping(ketchup), onions - topping(onion), pickles - topping(pickle), mustard - topping(mustard), two - number(2), french fries - side_type(french_fries), two - number(2), medium - drink_size(medium), cokes - drink_type(coca_cola)"
    },
    {
        "input": "i just want a vegan burger topped with jalapenos onions and mustard a side of apple slices and a small sugar free lemonade",
        "input_augmented": "i just want a vegan burger topped with jalapenos onions and mustard a side of apple slices and a small sugar free lemonade\nItems Found: a - number(1), vegan burger - main_dish_type(vegan_burger), jalapenos - topping(jalapenos), onions - topping(onion), mustard - topping(mustard), a - number(1), apple slices - side_type(apple_slices), a - number(1), small - drink_size(small), sugar free lemonade - drink_type(zero_sugar_lemonade)",
        "output": "A BurgerOrder(number=1, main_dish_type='vegan_burger', toppings=[Topping(name='jalapenos', qualifier='None', negation=False), Topping(name='onions', qualifier='None', negation=False), Topping(name='mustard', qualifier='None', negation=False), Topping(name='mustard', qualifier='None', negation=False), Topping(name='sunchips', qualifier='None', negation=False), Topping(name='sunchips', qualifier='None', negation=False), Topping(name='sunchips', qualifier='None', negation=False), Topping(name='sunchips', qualifier='None', negation=False), Topping(name='",
        "expected": "[BurgerOrder(number=1, main_dish_type='vegan_burger', toppings=[Topping(name='jalapenos'), Topping(name='onion'), Topping(name='mustard')]), SideOrder(number=1, side_type='apple_slices'), DrinkOrder(number=1, drink_type='zero_sugar_lemonade', size='small')]",
        "output_NER": "a - number(1), vegan burger - main_dish_type(vegan_burger), jalapenos - topping(jalapenos), onions - topping(onion), mustard - topping(mustard), a - number(1), apple slices - side_type(apple_slices), a - number(1), small - drink_size(small), sugar free lemonade - drink_type(zero_sugar_lemonade)"
    },
    {
        "input": "i'd like a double cheeseburger with ketchup and mayo a small curly fry and a large coke please",
        "input_augmented": "i'd like a double cheeseburger with ketchup and mayo a small curly fry and a large coke please\nItems Found: a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), ketchup - topping(ketchup), mayo - topping(mayonnaise), a - number(1), small - side_size(small), curly fry - side_type(curly_fries), a - number(1), large - drink_size(large), coke - drink_type(coca_cola)",
        "output": "A BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='ketchup', qualifier='None', negation=False), Topping(name='mayonnaise', qualifier='None', negation=False), Topping(name='mayonnaise', qualifier='None', negation=False), Topping(name='sunchunchun', qualifier='None', negation=False), Topping(name='sunchunchun', qualifier='None', negation=False)]), SideOrder(number=1, side_type='french_fries', size='large'), DrinkOrder(number=1, side_type='chocolate_dough', size='None'), SideOrder(number=1, side_type='french_f",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='ketchup'), Topping(name='mayonnaise')]), SideOrder(number=1, side_type='curly_fries', size='small'), DrinkOrder(number=1, drink_type='coca_cola', size='large')]",
        "output_NER": "a - number(1), double cheeseburger - main_dish_type(double_cheese_burger), ketchup - topping(ketchup), mayo - topping(mayonnaise), a - number(1), small - side_size(small), curly fry - side_type(curly_fries), a - number(1), large - drink_size(large), coke - drink_type(coca_cola)"
    },
    {
        "input": "can i get a vegan burger with cheddar cheese pickles lettuce tomatoes ketchup mustard and mayonnaise",
        "input_augmented": "can i get a vegan burger with cheddar cheese pickles lettuce tomatoes ketchup mustard and mayonnaise\nItems Found: a - number(1), vegan burger - main_dish_type(vegan_burger), cheddar cheese - topping(cheddar), pickles - topping(pickle), lettuce - topping(lettuce), tomatoes - topping(tomato), ketchup - topping(ketchup), mustard - topping(mustard), mayonnaise - topping(mayonnaise)",
        "output": "BurgerOrder(number=1, main_dish_type='vegan_burger', toppings=[Topping(name='lettuce', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='pickles', qualifier='None', negation=False), Topping(name='lettuce', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='tomatoes', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='ketchup', qualifier='None', negation=False), Topping(name='mustard', qualifier='None',",
        "expected": "[BurgerOrder(number=1, main_dish_type='vegan_burger', toppings=[Topping(name='cheddar'), Topping(name='pickle'), Topping(name='lettuce'), Topping(name='tomato'), Topping(name='ketchup'), Topping(name='mustard'), Topping(name='mayonnaise')])]",
        "output_NER": "a - number(1), vegan burger - main_dish_type(vegan_burger), cheddar cheese - topping(cheddar), pickles - topping(pickle), lettuce - topping(lettuce), tomatoes - topping(tomato), ketchup - topping(ketchup), mustard - topping(mustard), mayonnaise - topping(mayonnaise)"
    },
    {
        "input": "i would also like a large diet coke and a small order of french fries",
        "input_augmented": "i would also like a large diet coke and a small order of french fries\nItems Found: a - number(1), large - drink_size(large), diet coke - drink_type(diet_coke), a - number(1), small - side_size(small), french fries - side_type(french_fries)",
        "output": "A BurgerOrder(number=1, main_dish_type='diet_coke', toppings=[]), SideOrder(number=1, side_type='french_frisons', size='None', drink_type='diet_coke', drink_type='None', drink_type='None', drink_type='None')",
        "expected": "[DrinkOrder(number=1, drink_type='diet_coke', size='large'), SideOrder(number=1, side_type='french_fries', size='small')]",
        "output_NER": "a - number(1), large - drink_size(large), diet coke - drink_type(diet_coke), a - number(1), small - side_size(small), french fries - side_type(french_fries)"
    },
    {
        "input": "double cheeseburger onions bacon and lettuce",
        "input_augmented": "double cheeseburger onions bacon and lettuce\nItems Found: double cheeseburger - main_dish_type(double_cheese_burger), onions - topping(onion), bacon - topping(bacon), lettuce - topping(lettuce)",
        "output": "burgerordernumber(1, burgerbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchbunchb",
        "expected": "[BurgerOrder(number=1, main_dish_type='double_cheese_burger', toppings=[Topping(name='onion'), Topping(name='bacon'), Topping(name='lettuce')])]",
        "output_NER": "double cheeseburger - main_dish_type(double_cheese_burger), onions - topping(onion), bacon - topping(bacon), lettuce - topping(lettuce)"
    }
]